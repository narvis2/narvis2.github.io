<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://narvis2.github.io/</id><title>Narvis2</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2023-02-27T22:24:36+09:00</updated> <author> <name>narvis2</name> <uri>https://narvis2.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://narvis2.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://narvis2.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 narvis2 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>iOS Swfit UIKit UICollectionView</title><link href="https://narvis2.github.io/posts/iOS-UiKit-UICollectionView/" rel="alternate" type="text/html" title="iOS Swfit UIKit UICollectionView" /><published>2023-02-27T21:30:00+09:00</published> <updated>2023-02-27T21:30:00+09:00</updated> <id>https://narvis2.github.io/posts/iOS-UiKit-UICollectionView/</id> <content src="https://narvis2.github.io/posts/iOS-UiKit-UICollectionView/" /> <author> <name>Narvis2</name> </author> <category term="Swift" /> <category term="UIKit" /> <summary> 안녕하세요. narvis2 입니다. 이번시간에는 iOS UIKit UICollectionView에 대하여 알아보도록 하겠습니다. 🦋 UICollectionView 데이터 항목의 정렬된 Collection을 관리하고, Cutom한 Layout을 사용해 표시하는 객체 List, Slide 등 다양한 형태로 표현 가능 🌸 UICollectionView 구성 요소 Supplementary View, Cell, Decoration View로 구성되어 있음 Supplementary View 👉 Section에 대한 정보를 표시 (Header, Footer라고 생각하면 됨, 필수 구현 x) Cell 👉 CollectionView의 Content 표시 Decoration View 👉... </summary> </entry> <entry><title>iOS Swfit UIKit UITabBarController</title><link href="https://narvis2.github.io/posts/iOS-UiKit-UITabBarController/" rel="alternate" type="text/html" title="iOS Swfit UIKit UITabBarController" /><published>2023-02-27T21:20:00+09:00</published> <updated>2023-02-27T21:20:00+09:00</updated> <id>https://narvis2.github.io/posts/iOS-UiKit-UITabBarController/</id> <content src="https://narvis2.github.io/posts/iOS-UiKit-UITabBarController/" /> <author> <name>Narvis2</name> </author> <category term="Swift" /> <category term="UIKit" /> <summary> 안녕하세요. narvis2 입니다. 이번시간에는 iOS UIKit UITabBarController, UITabBar에 대하여 알아보도록 하겠습니다. 🦋 UITabBarController 다중 선택 인터페이스를 관리하는 ContainerViewController로 선택에 따라 어떤 자식 ViewController를 보여줄 것인지가 결정됨 UIViewController를 상속받음 🌸 UITabBar 앱에서 서로 다른 하위작업, View, 모드 사이의 선택을 할 수 있도록, TabBar에 하나 혹은 하나 이상의 버튼을 보여주는 Controll 항상 스크린 하단에 나타남 하나 혹은 하나 이상의 UITabBarItem으로 구성되어 있음 Android 로 치면 BottomNav... </summary> </entry> <entry><title>iOS Swfit UIKit UITableView</title><link href="https://narvis2.github.io/posts/iOS-UiKit-TableView/" rel="alternate" type="text/html" title="iOS Swfit UIKit UITableView" /><published>2023-02-27T18:20:00+09:00</published> <updated>2023-02-27T18:20:00+09:00</updated> <id>https://narvis2.github.io/posts/iOS-UiKit-TableView/</id> <content src="https://narvis2.github.io/posts/iOS-UiKit-TableView/" /> <author> <name>Narvis2</name> </author> <category term="Swift" /> <category term="UIKit" /> <summary> 안녕하세요. narvis2 입니다. 이번시간에는 iOS UIKit UITableView에 대하여 알아보도록 하겠습니다. 🦋 UITableView 여러 개의 Cell을 가지고 있고, 하나의 열과 여러 줄의 행을 지니고 있으며, 수직 으로만 Scroll이 가능 Section을 이용해 행을 그룹화하여 Content를 좀 더 쉽게 탐색할 수 있음 Section의 Header와 Footer에 View를 구성하여 추가적인 정보를 표시할 수 있음 🌸 UITableViewDelegate TableView의 시각적인 부분을 설정하고, 행의 Action 관리, 엑세서리 View 지원 그리고 TableView의 개별 행 편집을 도와 줌 TableView의 동작과 외관을 담당 View 가 ... </summary> </entry> <entry><title>React-Native Dimensions Window / Screen 차이점</title><link href="https://narvis2.github.io/posts/React-Native-Dimensions-Window-Screen/" rel="alternate" type="text/html" title="React-Native Dimensions Window / Screen 차이점" /><published>2022-12-19T17:30:00+09:00</published> <updated>2022-12-19T17:30:00+09:00</updated> <id>https://narvis2.github.io/posts/React-Native-Dimensions-Window-Screen/</id> <content src="https://narvis2.github.io/posts/React-Native-Dimensions-Window-Screen/" /> <author> <name>Narvis2</name> </author> <category term="React-Native" /> <category term="View" /> <summary> 안녕하세요. Narvis2 입니다. 이번 시간에는 React-Native에서 모바일 기기의 해상도를 가져올 수 있는 API인 Dimensions에 대하여 알아보도록 하겠습니다. 🍀 Window / Screen 차이점 Dimensions는 기본적으로 현재 기기의 화면 크기를 알기위해 사용 iOS에서는 window와 screen둘 중 어떤 것을 쓰더라도 동일 하게 작동 Android에서는 최상단 statusBar에서 차이가 남 👇 ☘️ Window 위에 보이는 그림 1의 빨간색으로 표시된(statusBar) 부분을 포함하지 않고 영역을 추출 const width = Dimensions.get("window").width; ☘️ Screen 위에 보이는 그림 ... </summary> </entry> <entry><title>JavaScript 비동기 작업 Promise, async, await 알아보기</title><link href="https://narvis2.github.io/posts/Javascript-Promise-Async-Await/" rel="alternate" type="text/html" title="JavaScript 비동기 작업 Promise, async, await 알아보기" /><published>2022-12-09T17:19:00+09:00</published> <updated>2022-12-09T18:01:03+09:00</updated> <id>https://narvis2.github.io/posts/Javascript-Promise-Async-Await/</id> <content src="https://narvis2.github.io/posts/Javascript-Promise-Async-Await/" /> <author> <name>Narvis2</name> </author> <category term="React-Native" /> <category term="JavaScript" /> <summary> 안녕하세요. Narvis2 입니다. 이번 시간에는 JavaScript에서 비동기 처리에 사용되는 promise, async, await에 대하여 알아보도록 하겠습니다. 🍀 Promise 비동기 작업의 단위 new Promise를 사용하여 생성 첫 번째 인수 resolve 👇 비동기 작업이 성공했을 경우 호출됨 두 번째 인수 reject 비동기 작업이 실패했을 경우 호출됨 ✅ new Promise(...)의 인스턴스를 생성하는 순간 여기에 할당된 비동기 작업은 바로 실행됨 즉, new Promise를 하는 순간 비동기 작업이 시작 then 👉 해당 Promise가 성공했을 ... </summary> </entry> </feed>
